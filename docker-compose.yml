version: "2.0"
services:
  redis:
    container_name: con_redis
    ports:
      - "0.0.0.0:6379:6379"
    volumes:
      - "/data/dvolumes/autocompound/docker_redis:/data"
    image: redis
    networks:
      - my_network
  # rabbitui:
  #   container_name: con_rabbit
  #   ports:
  #     - "0.0.0.0:15672:15672"
  #     - "0.0.0.0:5672:5672"
  #   image: rabbitmq:3-management
  #   restart: always
  #   volumes:
  #     - "/data/dvolumes/autocompound/docker_rabbit:/var/lib/rabbitmq"
  #   networks:
  #     - my_network
  contract_service:
    hostname: contract_service
    ports:
      - "0.0.0.0:3003:3003"
    container_name: contract_service
    restart: always
    build: ./contract_service
    env_file: ./config/contract.env
    environment:
      - NODE_ENV=dev
    networks:
      my_network:
        ipv4_address: 20.10.11.5
  farm:
    hostname: farm
    ports:
      - "0.0.0.0:3002:3002"
    container_name: farm
    restart: always
    build: ./farm
    env_file: ./config/farm.env
    volumes:
      - "/data/dvolumes/autocompound/public:/app/public:rw"
    depends_on:
      - user
    networks:
      my_network:
        ipv4_address: 20.10.11.4
  user:
    hostname: user
    ports:
      - "0.0.0.0:3001:3001"
      - "0.0.0.0:50051:50051"
    container_name: user
    restart: always
    build: ./user
    env_file: ./config/user.env
    networks:
      my_network:
        ipv4_address: 20.10.11.3
  gateway_service:
    hostname: gateway_service
    ports:
      - "0.0.0.0:8081:8081"
    container_name: gateway_service
    restart: always
    build: ./gateway_service
    networks:
      my_network:
        ipv4_address: 20.10.11.2
networks:
  my_network:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      config:
        - subnet: 20.10.11.0/16
          gateway: 20.10.11.1
