// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

// import "google/protobuf/timestamp.proto";

option go_package = "github.com/autocompound/docker_backend/user/helloworld/helloworld";
option java_multiple_files = true;
option java_package = "io.autocompound.user.helloworld";
option java_outer_classname = "HelloWorldProto";

package helloworld;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello(HelloRequest) returns (HelloReply) {}
  rpc GetUserDetails(UserRequest) returns (UserReply) {}
  rpc GetFarms(FarmRequest) returns (FarmReply) {}
}

// The request message containing the user's name.
message HelloRequest { string name = 1; }

// The response message containing the greetings
message HelloReply { string message = 1; }

message UserRequest { string id = 1; }

message UserReply {
  string id = 1;
  string email = 2;
  string firstname = 3;
  string lastname = 4;
  string status = 5;
  string role = 6;
  string _created = 7;
  string _modified = 8;
}
// request for all farm
message FarmRequest {
  int64 chainId = 1;
  string status = 2;
}
// array response for farms
message FarmReply { repeated Item items = 1; }
message Item {
  string id = 1;
  string address = 2;
  string status = 3;
  double tokenPrice = 4;
}